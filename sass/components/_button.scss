/* pseudo class */
.btn {
    &, // note that <button> does not have :link or :visited pseudo classes, so need to just have .btn i.e. &
    &:link, 
    &:visited {
        text-transform: uppercase;
        text-decoration: none;
        padding: 1.5rem 4rem;
        display: inline-block; /* for padding/margins to count */
        border-radius: 10rem;
        transition: all .2s; /* determines for the transforms, makes more smooth */
        position: relative; /* for ::after */
        border: none;
    }

    &:hover {
        transform: translateY(-.3rem);
        box-shadow: 0 1rem 2rem rgba($color-black,.2); /* x y direction and blur */

        &::after {
            transform: scaleX(1.4) scaleY(1.6);
            opacity: 0;
        }
    
    }

    &:active,
    &:focus {
        outline: none; // to remove the blue box for focus
        transform: translateY(-.1rem);
        box-shadow: 0 .5rem 1rem rgba($color-black,.2);
    }

    &--white {
        background-color: $color-white;
        color: $color-grey-dark;
        &::after {
            background-color: $color-white;
        }
    }

    &--green {
        background-color: $color-primary;
        color: $color-white;
        &::after {
            background-color: $color-white;
        }
    }

    /* pseudo element */
    &::after {
        content: "";
        display: inline-block; /* since button is inline-block */
        height: 100%; /* inherits button height and width */
        width: 100%; 
        border-radius: 10rem;
        position: absolute; /* references first elment with relative position it can find */
        top: 0;
        left: 0;
        z-index: -1;
        transition: all .4s; /* for transform in btn:hover::after */
    }

    &--animated {
        animation: moveInBottom .5s ease-out .75s; /* the last number means a delay */
        animation-fill-mode: backwards; /* applies animation of 0% before animation starts */
    }
}

.btn-text {
    &:link,
    &:visited {
        font-size: $default-font-size;
        color: $color-primary;
        display: inline-block;
        text-decoration: none;
        border-bottom: 1px solid $color-primary;
        padding: 3px;
        transition: all .2s;
    }

    &:hover {
        background-color: $color-primary;
        color: $color-white;
        box-shadow: 0 1rem 2rem rgba($color-black, .15);
        transform: translateY(-2px);
    }
}